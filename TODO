Next:
=====
- AB_BANKING:
  - maybe compile-in plugins to reduce number of exported symbols

  - remove libs/aqbanking/dialogs/dlg_editaccount*
  - change account/user edit/create dialogs to use user/account specs

- AqHBCI:
  - start adapting the account/user setup dialogs

- split AqBanking into two libraries: One for direct use by applications, the other shall contain
  functions needed by backends and plugins. This should reduce the number of symbols exported to applications

- fix apidoc for provider.h



Mid-term
========

- types/*.xml: convert to typemaker2 (partially done)

- internal:
  - AB_ACCOUNT and AB_USER should be handled by the backends only
      - these structures are currently way to fat for applications because
        they also contain internal info for the backends which are absolutely
        not needed by applications. They also make it very conplicated to manage
        users and accounts.
  - backend functions to be used by setup apps:
    - getAccounts()
    - getUsers()



Long-term
=========

- remove data storage stuff (APPS should store their info themselves)
- remove message engine stuff, use gparser instead




Old
===

- loganalyzer: read messages from FASTBUFFER instead from IO

CAVEATS:
- you need to call AB_Job_CheckAvailability() after creating a job


- generic settings
  - bank code
  - bank name
  - hbci version
  - bank url
  - flags:
    - userId == customerId

- settings in DDV mode:
  - flags:
    - bankDoesntSign
    - bankUsesSignSeq

- settings in RDH mode
  - rdh version
  - keysize
  - flags:
    - bankDoesntSign
    - bankUsesSignSeq
  

- settings in pin/tan mode
  - http version
  - flags
    - forceSslv3
    - noBase64
    - omitSmsAccount


- send a local branch under the same name to server:
  "git push -u origin HEAD"


