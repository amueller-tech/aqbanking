<?xml?>

<tm2>
  <type id="AB_USER" type="pointer">
    <descr>
      This type contains basic information about users.
      All text fields are in UTF-8.
    </descr>

    <lang id="c">
      <identifier>AB_USER</identifier>
      <prefix>AB_User</prefix>
      
      <baseFileName>user</baseFileName>
      
      <flags>
        with_inherit
        with_xml
        with_db
        with_list1
        with_list2
        with_refcount
        noCopy
        noDup
      </flags>
      
      <headers>
        <header type="sys" loc="pre">aqbanking/error.h</header>

        <header type="sys" loc="pre">gwenhywfar/mdigest.h</header>
        <header type="sys" loc="pre">gwenhywfar/text.h</header>
        <header type="sys" loc="pre">gwenhywfar/buffer.h</header>

        <header type="sys" loc="post">aqbanking/backendsupport/provider.h</header>

      </headers>


      <inlines>


        <inline loc="end" access="private">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             /** \n
              */                                                                                 \n
             int $(struct_prefix)__ReadFromDb($(struct_type) *a, GWEN_DB_NODE *db);
          </content>
        </inline>



        <inline loc="code">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             int $(struct_prefix)__ReadFromDb($(struct_type) *a, GWEN_DB_NODE *db) {
               assert(a);
               $(struct_prefix)_ReadDb(a, db);
               return 0;
             }
          </content>
        </inline>


        <inline loc="end" access="private">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             /** \n
              */                                                                                 \n
             int $(struct_prefix)__WriteToDb(const $(struct_type) *a, GWEN_DB_NODE *db);
          </content>
        </inline>



        <inline loc="code">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             int $(struct_prefix)__WriteToDb(const $(struct_type) *a, GWEN_DB_NODE *db) {
               assert(a);
               $(struct_prefix)_WriteDb(a, db);
               return 0;
             }
          </content>
        </inline>

      </inlines>


    </lang>

    <enums>

    </enums>

    <defines>

    </defines>


    <members>


      <group title="Identifiers" >
        <member name="uniqueId" type="uint32_t" maxlen="4">
          <descr>
            This is a unique id assigned by AqBanking.
          </descr>
          <default>0</default>
          <preset>0</preset>
          <access>public</access>
          <flags>with_getbymember</flags>
        </member>
    
      </group>


      <group title="Common Information" >

        <member name="backendName" type="char_ptr" maxlen="32" >
          <descr>
            Name of the banking backend this account belongs to.
          </descr>
          <access>public</access>
          <flags>own with_hash</flags>
          <setflags>const dup</setflags>
          <getflags>const</getflags>
        </member>
  
        <member name="userName" type="char_ptr" maxlen="64" >
          <descr>
            Clear name of the user.
          </descr>
          <access>public</access>
          <flags>own with_hash</flags>
          <setflags>const dup</setflags>
          <getflags>const</getflags>
        </member>

      </group>


      <group title="Information Provided by Banks" >

        <member name="userId" type="char_ptr" maxlen="64" >
          <descr>
            user id assigned by the bank
          </descr>
          <access>public</access>
          <flags>own with_hash</flags>
          <setflags>const dup</setflags>
          <getflags>const</getflags>
        </member>


        <member name="customerId" type="char_ptr" maxlen="64" >
          <descr>
            customer id assigned by the bank (in many cases same as user id)
          </descr>
          <access>public</access>
          <flags>own with_hash</flags>
          <setflags>const dup</setflags>
          <getflags>const</getflags>
        </member>

        <member name="country" type="char_ptr" maxlen="16" >
          <descr>
          </descr>
          <access>public</access>
          <flags>own with_hash</flags>
          <setflags>const dup</setflags>
          <getflags>const</getflags>
        </member>
  
        <member name="bankCode" type="char_ptr" maxlen="64" >
          <descr>
            National bank code (e.g. BLZ in Germany, routing number in other countries).
          </descr>
          <access>public</access>
          <flags>own with_hash</flags>
          <setflags>const dup</setflags>
          <getflags>const</getflags>
        </member>

      </group>


      <group title="Internal Data">

        <member name="provider" type="AB_PROVIDER">
          <descr>
          </descr>
          <default>NULL</default>
          <preset>NULL</preset>
          <access>public</access>
          <flags>volatile</flags>
          <setflags>none</setflags>
          <getflags>none</getflags>
        </member>

        <member name="certDb" type="GWEN_DB_NODE">
          <descr>
          </descr>
          <default>NULL</default>
          <preset>NULL</preset>
          <access>public</access>
          <flags>own</flags>
          <setflags>none</setflags>
          <getflags>none</getflags>
        </member>

        <member name="lastSessionId" type="uint32_t" maxlen="4">
          <descr>
            Last session id for this user.
          </descr>
          <default>0</default>
          <preset>0</preset>
          <access>public</access>
          <flags>with_getbymember</flags>
        </member>

      </group>


    </members>



    <virtualFns>

      <fn name="readFromDb" location="post" >
        <descr>
          Read a user from a GWEN_DB_NODE.
        </descr>
        <access>public</access>
        <preset>AB_User__ReadFromDb</preset>
        <returnType>int</returnType>
        <defaultReturnValue>GWEN_ERROR_NOT_IMPLEMENTED</defaultReturnValue>
        <params>
          <param type="GWEN_DB_NODE*"               name="dbData" >
            <descr>
              Config data to read from.
            </descr>
          </param>
        </params>
      </fn>


      <fn name="writeToDb" location="post" >
        <descr>
          Write a user to a GWEN_DB_NODE.
        </descr>
        <access>public</access>
        <preset>AB_User__WriteToDb</preset>
        <flags>const</flags>
        <returnType>int</returnType>
        <defaultReturnValue>GWEN_ERROR_NOT_IMPLEMENTED</defaultReturnValue>
        <params>
          <param type="GWEN_DB_NODE*"               name="dbData" >
            <descr>
              Config data to read from.
            </descr>
          </param>
        </params>
      </fn>


    </virtualFns>

    
  </type>
  
</tm2>

