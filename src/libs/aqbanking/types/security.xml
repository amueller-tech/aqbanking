<?xml?>

<tm2>
  <type id="AB_SECURITY" type="pointer">
    <descr>
    </descr>

    <lang id="c">
      <identifier>AB_SECURITY</identifier>
      <prefix>AB_Security</prefix>
      
      <baseFileName>security</baseFileName>
      
      <flags>
        with_db
        with_xml
        with_list1
        with_list2
        with_refcount
        with_hash
      </flags>
      
      <headers>
        <header type="sys" loc="pre">aqbanking/error.h</header>
        <header type="sys" loc="pre">gwenhywfar/types.h</header>
        <header type="sys" loc="pre">gwenhywfar/gwentime.h</header>

        <header type="sys" loc="post">aqbanking/types/value.h</header>
      </headers>



      <inlines>

        <inline loc="end" access="public">
          <typeFlagsMask>with_list2</typeFlagsMask>
          <typeFlagsValue>with_list2</typeFlagsValue>
          <content>
             $(api) int $(struct_prefix)_List2_freeAll($(struct_type)_LIST2 *tl);
          </content>
        </inline>

        <inline loc="code">
          <typeFlagsMask>with_list2</typeFlagsMask>
          <typeFlagsValue>with_list2</typeFlagsValue>
          <content>

             static $(struct_type) *$(struct_prefix)_List2__freeAll_cb($(struct_type) *t, void *user_data) {
               $(struct_prefix)_free(t);
               return NULL;
             }


             int $(struct_prefix)_List2_freeAll($(struct_type)_LIST2 *tl) {
               if (tl) {
                 $(struct_prefix)_List2_ForEach(tl, $(struct_prefix)_List2__freeAll_cb, NULL);
                 $(struct_prefix)_List2_free(tl); 
               }
               else {
                 DBG_ERROR(AQBANKING_LOGDOMAIN, "List missing");
                 return GWEN_ERROR_INVALID;
               }
               return 0;
             }
          </content>
        </inline>

      </inlines>


    </lang>

    <enums>

    </enums>

    <defines>

    </defines>


    <members>

      <member name="name" type="char_ptr" maxlen="64" >
        <descr>
          Full name of the security.
        </descr>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>

      <member name="uniqueId" type="char_ptr" maxlen="64" >
        <descr>
          Unique id of the security within the namespace.
        </descr>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>

      <member name="nameSpace" type="char_ptr" maxlen="64" >
        <descr>
          Namespace for uniqueId (e.g. CUSIP for North America)
        </descr>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>

      <member name="tickerSymbol" type="char_ptr" maxlen="64" >
        <descr>
          Ticker symbol of the security.
      </descr>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>

      <member name="units" type="AB_VALUE" maxlen="256" >
        <descr>
          Number of units held (e.g. number of stock units etc)
        </descr>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
        <default>NULL</default>
        <preset>NULL</preset>
      </member>

      <member name="unitPriceValue" type="AB_VALUE" maxlen="256" >
        <descr>
          Price of a unit as of unitPriceDate.
        </descr>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
        <default>NULL</default>
        <preset>NULL</preset>
      </member>

      <member name="unitPriceDate" type="gwen_time" maxlen="32" >
        <descr>
          Date for the unitPriceValue
        </descr>
        <aqdb_type>AQDB_DataType_String</aqdb_type>
        <access>public</access>
        <flags>own with_hash</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
        <default>NULL</default>
        <preset>NULL</preset>
      </member>


    </members>

    
  </type>
  
</tm2>

