/* This file is auto-generated from "user.xml" by the typemaker
   tool of Gwenhywfar. 
   Do not edit this file -- all changes will be lost! */
#ifndef USER_L_H
#define USER_L_H

/** @page P_AB_USER_LIB AB_User (lib)
This page describes the properties of AB_USER
This group represents a user within AqBanking. Please note: Changing any of the attributes of a user permanently requires calling @ref AB_Banking_BeginExclUseAccount() before the modifications and @ref AB_Banking_EndExclUseAccount() afterwards. This locking makes sure that concurrent access to the settings doesn't corrupt the configuration database.@anchor AB_USER_FileLock
<h3>FileLock</h3>
<p>
</p>
<p>
Set this property with @ref AB_User_SetFileLock, 
get it with @ref AB_User_GetFileLock
</p>

@anchor AB_USER_DbId
<h3>DbId</h3>
<p>
</p>
<p>
Set this property with @ref AB_User_SetDbId, 
get it with @ref AB_User_GetDbId
</p>

*/
#include <gwenhywfar/misc.h>
#include "user.h"
#include <gwenhywfar/misc.h>

#ifdef __cplusplus
extern "C" {
#endif


GWEN_LIST_FUNCTION_DEFS(AB_USER, AB_User)













/**
* Returns the property @ref AB_USER_FileLock
*/
AQBANKING_API GWEN_FSLOCK *AB_User_GetFileLock(const AB_USER *el);
/**
* Set the property @ref AB_USER_FileLock
*/
AQBANKING_API void AB_User_SetFileLock(AB_USER *el, GWEN_FSLOCK *d);


/**
* Returns the property @ref AB_USER_DbId
*/
AQBANKING_API const char *AB_User_GetDbId(const AB_USER *el);
/**
* Set the property @ref AB_USER_DbId
*/
AQBANKING_API void AB_User_SetDbId(AB_USER *el, const char *d);


#ifdef __cplusplus
} /* __cplusplus */
#endif


#endif /* USER_L_H */
