<?xml?>

<tm2>
  <type id="AQFINTS_KEYNAME" type="pointer">
    <descr>
    </descr>
    <lang id="c">
      <identifier>AQFINTS_KEYNAME</identifier>
      <prefix>AQFINTS_KeyName</prefix>

      <baseFileName>keyname</baseFileName>
      
      <flags>
        with_db
        with_list1
        with_refcount
      </flags>
      
      <headers>
        <header type="sys"   loc="pre">aqbanking/error.h</header>
        <header type="sys"   loc="pre">gwenhywfar/bindata.h</header>
      </headers>
      
      
      <inlines>

        <!-- SetCid() -->

        <inline loc="end" access="public">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             $(api) void $(struct_prefix)_SetCid($(struct_type) *st, uint8_t *ptr, uint32_t len);
          </content>
        </inline>

        <inline loc="code">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             void $(struct_prefix)_SetCid($(struct_type) *st, uint8_t *ptr, uint32_t len) {
               if (st-&gt;cid.pointer &amp;&amp; st-&gt;cid.length)
                 free(st-&gt;cid.pointer);
               st-&gt;cid.pointer=ptr;
               st-&gt;cid.length=len;
             }
          </content>
        </inline>
      

        <!-- GetCidPointer() -->

        <inline loc="end" access="public">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             $(api) uint8_t* $(struct_prefix)_GetCidPointer(const $(struct_type) *st);
          </content>
        </inline>

        <inline loc="code" >
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             uint8_t* $(struct_prefix)_GetCidPointer(const $(struct_type) *st) {
               return st-&gt;cid.pointer;
             }
          </content>
        </inline>


        <!-- GetCidLength() -->

        <inline loc="end" access="public">
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             $(api) uint32_t $(struct_prefix)_GetCidLength(const $(struct_type) *st);
          </content>
        </inline>

        <inline loc="code" >
          <typeFlagsMask></typeFlagsMask>
          <typeFlagsValue></typeFlagsValue>
          <content>
             uint32_t $(struct_prefix)_GetCidLength(const $(struct_type) *st) {
               return st-&gt;cid.length;
             }
          </content>
        </inline>

      </inlines>
      
      
    </lang>

    <defines>

      <define id="AQFINTS_KEYNAME_RTFLAGS" prefix="AQFINTS_KEYNAME_RTFLAGS_">
      </define>

     <define id="AQFINTS_KEYNAME_FLAGS" prefix="AQFINTS_KEYNAME_FLAGS_">
     </define>

    </defines>

    <enums>

    </enums>



    <members>
  
      <member name="flags" type="uint32_t" maxlen="8">
        <default>0</default>
        <preset>0</preset>
        <flags>with_flags</flags>
        <access>public</access>
      </member>


      <member name="uniqueUserId" type="uint32_t" maxlen="8" >
        <default>0</default>
        <preset>0</preset>
        <access>public</access>
        <flags>with_getbymember</flags>
      </member>


      <member name="userId" type="char_ptr" maxlen="64" >
        <default>NULL</default>
        <preset>NULL</preset>
        <access>public</access>
        <flags>own with_getbymember</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>


      <member name="bankCode" type="char_ptr" maxlen="64" >
        <default>NULL</default>
        <preset>NULL</preset>
        <access>public</access>
        <flags>own</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>


      <member name="country" type="int" maxlen="8" >
        <default>0</default>
        <preset>0</preset>
        <access>public</access>
      </member>
      

      <member name="keyType" type="char_ptr" maxlen="8" >
        <default>NULL</default>
        <preset>NULL</preset>
        <access>public</access>
        <flags>own</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>


      <member name="keyNumber" type="int" maxlen="8" >
        <default>0</default>
        <preset>0</preset>
        <access>public</access>
      </member>


      <member name="keyVersion" type="int" maxlen="8" >
        <default>0</default>
        <preset>0</preset>
        <access>public</access>
      </member>




      <member name="signatureCounter" type="int" maxlen="8" >
        <default>0</default>
        <preset>0</preset>
        <access>public</access>
      </member>

      <member name="cid" type="GWEN_BINDATA" maxlen="256" >
        <access>private</access>
        <flags>own</flags>
        <setflags>omit</setflags>
        <getflags>omit</getflags>
      </member>


      <member name="systemId" type="char_ptr" maxlen="256" >
        <default>NULL</default>
        <preset>NULL</preset>
        <access>public</access>
        <flags>own</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>


      <member name="tan" type="char_ptr" maxlen="64" >
        <default>NULL</default>
        <preset>NULL</preset>
        <access>public</access>
        <flags>own</flags>
        <setflags>const dup</setflags>
        <getflags>const</getflags>
      </member>



      <member name="runtimeFlags" type="uint32_t" maxlen="8">
        <default>0</default>
        <preset>0</preset>
        <flags>volatile with_flags</flags>
        <access>public</access>
      </member>

    </members>
    
  </type>
  
</tm2>
